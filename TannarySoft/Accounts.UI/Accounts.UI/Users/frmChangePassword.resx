<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSavePassword.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQwSURBVFhHtZZ/TJR1HMfvPBQD2yxEc8zYoESzH1prc3Pd0xZTbBymKWka/fDULcRqueXmimJt
        lk3XlK1pLU1JBJS7JJCLeRw5BBQwRQXth0DSSWz+geYUDt593l8PVovnnge7+26v3Wff7+f9fn+e57nb
        PRbL6NY0aX9bKBZOCheCsOYez9gT9pUgjgVCIC4uHpqWiqys1che/47iFam5xzP2BHupCctKE5driYlJ
        +DDvEzQ2tcB/tQe912/gxl83Fay5x7OP8j4Fe6kRqP1fK13UtxcszECFpwaXfu3AFf+fio4rflzu6MLl
        zi50dl0d3mcPe9NEQ61Aj7taD4mqN+35F/CDtxZtv7Tjopg3NLfAVVaFrdvysWlznoI1907K2cXfOlUv
        NQtFSw8h+W4mKE9KTkGJqxKnz19C09lWFJdWID1jKWJiYmn8L7jnWLQUJe5KNLe0KQ1rekhv+WgHmC2C
        wfc2fwzfiSbUNZ/DvkI3pqfMolmP8KYw5R+mrLnXw579RUdQLxpq6UEvgZ6m15apCQ9i7wE3ahp+gvto
        NZ6bn06jbiEphAvPulMXOETjg6/+NPYdPIKpCdOo3WI6XRpr5tlTcdDlwbHaRuzYtR/R0eNp4jRh4mQv
        NZW+ergqvKAXPU1oh1vaHUteRqHbg6rjp7Bh4wdDzzvehAl7kPPu+yiVu3DUewKOxSuobzehHW7xL87M
        wjeHyuGra8arazYMDWDWA6veyMYBuYDquibQS4R+s2L2+R1LVmJ3gUu+/W1Y+Xr2qAfIXLUWe4rKlJ5e
        Zge4XxrzhJvzHZnYtqsA7b//geVZ64YGcMmZGbAo8zXk7ylWenrRM+jNjBFXrOy2piTL81tjwc7tj6K8
        7EX09X6Gr3fPxVvrLKPii51PosqzXOnpRU96M0Ng1n+Wc8okC3ovWICOyEBvZkjyiL+mXO1pCT4vnIkQ
        4s0MGSB3pDuQqz0lwY1CQ4QQb2boDzBHgmuF4xFCvDXJ0B9gtgTXCNURQrw1ydAf4IlgsFc+DRhssOLn
        Hy0K1kb96lwuTJOM0AOw8VhoBr1WFG0dB6vVomDNPSMdhzAeQMIHq6whGfCMRU6G+nNSsOaekY4Dhh7g
        cQn3jBFsIRmotKH18/uQNNmmYM09Ix29NcnQfwSPWTHw/TgMVEQZEiiNgfOZO7A2o6G3Jhn6A8wag4Dr
        njtDGNB/aAKc82IVrI36eU5vTTJ0B7A/YkN/8QQEvhtvSH/RvTi8dpKCtSmNeDNDf4CZUej7dqK6pUb0
        H5Yrl2CF1Eb9PKe3XTL0B5gRhdt74xAokbsQAehtlwz9AVLG4tZX8egburIwftKT3nbJ0BsgJzHOhuv5
        D+DWl5MjAr2ZIQPkjPRvyJfJ7menR2P7sonY8VJ4oSe9mSHovtw+LIeFwrngmwvfXsIFPenNjOH1N6J5
        SNlY1XpfAAAAAElFTkSuQmCC
</value>
  </data>
</root>